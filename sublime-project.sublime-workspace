{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"cons",
				"console\t(VisitEditor.vue)"
			],
			[
				"del",
				"deliveryDate\t(VisitEditor.vue)"
			],
			[
				"de",
				"deliveryDate\tabc"
			],
			[
				"vc-",
				"vc-calendar\t(main.js)"
			],
			[
				"V",
				"Visit"
			],
			[
				"st",
				"store"
			],
			[
				"Vi",
				"VisitEditor"
			],
			[
				"com",
				"component"
			]
		]
	},
	"buffers":
	[
		{
			"file": "src/components/Sidebar.vue",
			"settings":
			{
				"buffer_size": 2709,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/views/Home.vue",
			"settings":
			{
				"buffer_size": 1075,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/views/Route.vue",
			"settings":
			{
				"buffer_size": 8813,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/main.js",
			"settings":
			{
				"buffer_size": 1014,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "<template>\n  <!-- eslint-disable max-len -->\n  <div v-if=\"!!currentVisit.UUID\">\n\n<!--    заголовок страницы-->\n\n    <vs-tabs alignment=\"center\">\n      <vs-tab label=\"Оплата\" v-if=\"clientByINN(currentVisit.clientINN).clientType !== 'Магазин'\">\n        Планируемая оплата: {{ currentVisit.paymentPlan }}\n        <br>\n        Лимит: {{ clientByINN(currentVisit.clientINN).limit }}\n        <br>\n        Отсрочка платежа: {{ clientByINN(currentVisit.clientINN).delay }}\n        <vs-input\n          type=\"number\"\n          label-placeholder=\"Сумма оплаты\"\n          v-model.number=\"currentVisit.payment\"/>\n        <br>\n        <ClientPaymentHistory  :clientinn=\"currentVisit.clientINN\"></ClientPaymentHistory>\n        <vs-switch v-model=\"currentVisit.dataBase\">\n          <span slot=\"on\" style=\"font-size:16px\">ПБК</span>\n          <span slot=\"off\" style=\"font-size:16px\">Тест</span>\n        </vs-switch>\n      </vs-tab>\n      <vs-tab label=\"Заказ\" v-if=\"clientByINN(currentVisit.clientINN).clientType !== 'Магазин'\">\n          Дата доставки\n          <vc-date-picker\n          v-model='currentVisit.deliveryDate'\n          locale=\"ru\"\n          :min-date='new Date()'\n          :masks=\"masks\"/>\n        <vs-collapse>\n          <vs-collapse-item :key=\"index\" v-for=\"(order, index) in currentVisit.orders\">\n            <div slot=\"header\">\n              {{ productByItem(order.productItem).name }} <br>\n              <!-- {{ stringLineFromOrder(order) }} -->\n            </div>\n            <vs-button\n              @click=\"order.order = order.recommend\">Рекомендуемый заказ: {{ order.recommend }}\n            </vs-button>\n            <vs-input-number\n              min=\"0\"\n              vs-size=\"medium\"\n              label=\"Заказ\"\n              v-model=\"order.order\"></vs-input-number>\n            <vs-input-number\n              min=\"0\"\n              vs-size=\"medium\"\n              label=\"Остаток\"\n              v-model=\"order.balance\"\n              @input=\"updateRecomSales(index)\"\n            ></vs-input-number>\n\n            <vs-list>\n              <vs-list-header title=\"Предыдущие заказы\"></vs-list-header>\n              <vs-list-item\n                v-for=\"(previousOrder, date) in previousOrders[order.productItem]\"\n                :key=\"previousOrder.id\"\n                :title=\"date\">\n                {{ stringLineFromOrder(previousOrder) }}\n              </vs-list-item>\n            </vs-list>\n          </vs-collapse-item>\n        </vs-collapse>\n\n      </vs-tab>\n      <vs-tab label=\"Чеклист\">\n        <!--    чек-лист для Драфт и Хорека-->\n        <div v-if=\"clientByINN(currentVisit.clientINN).clientType === 'Хорека'\n    || clientByINN(currentVisit.clientINN).clientType === 'Драфт'\">\n          <vs-row>\n            <vs-col vs-w=\"12\">\n              <vs-table stripe :hoverFlat=\"true\"\n                        :data=\"checklist.filter((q) => q.section === 'Цены' )\"\n                        noDataText=\"Вопросы в чеклисте отсутствуют\">\n                <template slot=\"thead\">\n                <vs-th>\n                  Сорт пива\n                </vs-th>\n                <vs-th>\n                  Цена\n                </vs-th>\n                <vs-th>\n                  Остаток\n                </vs-th>\n                </template>\n\n                <template slot-scope=\"{data}\">\n                <vs-tr :key=\"question.UUID\" v-for=\"(question, index) in data\" >\n\n                  <vs-td :data=\"question.text\">\n                    {{ question.text }}\n                  </vs-td>\n\n                  <vs-td :data=\"data[index].answer1\">\n                    <vs-input v-model=\"data[index].answer1\"/>\n                  </vs-td>\n\n                  <vs-td :data=\"data[index].answer2\">\n                    <vs-input v-model=\"data[index].answer2\"/>\n                  </vs-td>\n\n                </vs-tr>\n                </template>\n\n              </vs-table>\n              <vs-table stripe :hoverFlat=\"true\"\n                        :data=\"checklist.filter((q) => q.section === 'Кеги' )\"\n                        noDataText=\"Вопросы в чеклисте отсутствуют\">\n                <template slot=\"thead\">\n                <vs-th>\n                  Вопросы\n                </vs-th>\n                <vs-th>\n                  Ответы\n                </vs-th>\n                </template>\n\n                <template slot-scope=\"{data}\">\n                <vs-tr :key=\"question.UUID\" v-for=\"(question, index) in data\" >\n\n                  <vs-td :data=\"question.text\">\n                    {{ question.text }}\n                  </vs-td>\n\n                  <vs-td :data=\"data[index].answer1\">\n                    <vs-input v-model=\"data[index].answer1\"/>\n                  </vs-td>\n\n                </vs-tr>\n                </template>\n\n              </vs-table>\n            </vs-col>\n          </vs-row>\n        </div>\n\n        <!--    чек-лист для магазина-->\n        <div v-if=\"clientByINN(currentVisit.clientINN).clientType === 'Магазин'\">\n          <vs-row>\n            <vs-col vs-w=\"12\">\n              <vs-table stripe :hoverFlat=\"true\"\n                        :data=\"checklist.filter((q) => q.section === 'Общий' )\"\n                        noDataText=\"Вопросы в чеклисте отсутствуют\">\n                <template slot=\"thead\">\n                <vs-th>\n                  Мероприятия\n                </vs-th>\n                <vs-th>\n                  Отметка провер.\n                </vs-th>\n                <vs-th>\n                  Примечание\n                </vs-th>\n                </template>\n\n                <template slot-scope=\"{data}\">\n                <vs-tr :key=\"question.UUID\" v-for=\"(question, index) in data\" >\n\n                  <vs-td :data=\"question.text\">\n                    {{ question.text }}\n                  </vs-td>\n\n                  <vs-td :data=\"data[index].answer1\">\n                    <vs-switch v-model=\"data[index].answer1\"></vs-switch>\n                  </vs-td>\n\n                  <vs-td :data=\"data[index].answer2\">\n                    <vs-input v-model=\"data[index].answer2\"/>\n                  </vs-td>\n\n                </vs-tr>\n                </template>\n              </vs-table>\n            </vs-col>\n          </vs-row>\n        </div>\n      </vs-tab>\n      <vs-tab label=\"Фото\">\n        <vs-upload\n          multiple\n          single-upload\n          fileName=\"image\"\n          :headers=\"authHeader\"\n          :action=\"photoUploadUrl\"\n          automatic\n          :accept=\"['JPG','jpg']\"\n        />\n      </vs-tab>\n    </vs-tabs>\n\n\n    <!--копки Отменить и Завершить-->\n    <vs-row vs-w=\"12\"  vs-type=\"flex\" vs-justify=\"flex-start\">\n      <vs-col vs-type=\"flex\" vs-justify=\"flex-start\" vs-align=\"center\" vs-xs=\"4\" vs-lg=\"4\">\n        <vs-button @click=\"resetVisit\">Отменить визит</vs-button>\n      </vs-col>\n      <vs-col vs-type=\"flex\" vs-justify=\"flex-end\" vs-align=\"center\" vs-xs=\"4\" vs-lg=\"4\">\n      </vs-col>\n      <vs-col vs-type=\"flex\" vs-justify=\"flex-end\" vs-align=\"center\" vs-xs=\"4\" vs-lg=\"4\">\n        <vs-button @click=\"finishVisit\">Закончить визит</vs-button>\n      </vs-col>\n    </vs-row>\n\n<!--    <vs-row class=\"fixed-row-bottom\">-->\n<!--      <vs-col>-->\n<!--        <vs-button type=\"border\" icon=\"business_center\"></vs-button>-->\n<!--        <vs-button icon=\"map\"></vs-button>-->\n<!--        <vs-button icon=\"location_on\"></vs-button>-->\n<!--        <vs-button icon=\"list_alt\"></vs-button>-->\n<!--        <vs-button icon=\"info\"></vs-button>-->\n<!--      </vs-col>-->\n<!--    </vs-row>-->\n\n  </div>\n</template>\n\n<script>\n/* eslint-disable max-len */\n\n\nimport {\n  VISIT_CLOSE_CURRENT,\n  VISIT_GET_CURRENT, VISIT_GET_HISTORY_BY_INN,\n  VISIT_SAVE_CURRENT_TO_VUEX,\n} from '@/store/actions/visits';\nimport { GETCLIENTBYINN } from '@/store/actions/clients';\nimport { ALL_GOODS, GOOD_BY_ITEM } from '@/store/actions/goods';\nimport {\n  CHECKLIST_RESET_CURRENT,\n  CHECKLIST_GET_CURRENT,\n  CHECKLIST_SAVE_CURRENT, CHECKLIST_UPLOAD_CURRENT_TO_SERVER,\n} from '@/store/actions/checklists';\nimport ClientPaymentHistory from '@/components/ClientPaymentHistory.vue';\nimport { HTTP } from '@/utils/http';\n\nconst mask = 'YYYY-MM-DD';\n\nexport default {\n  name: 'VisitEditor',\n  computed: {\n    products() {\n      return this.$schema.getters[ALL_GOODS];\n    },\n    previousVisits() {\n      return this.$store.getters[VISIT_GET_HISTORY_BY_INN](this.currentVisit.clientINN);\n    },\n    photoUploadUrl() {\n      return `${HTTP.defaults.baseURL}photos/${this.currentVisit.UUID}`;\n    },\n  },\n  components: {\n    ClientPaymentHistory,\n  },\n  data() {\n    return {\n      currentVisit: {},\n      checklist: [],\n      timer: '',\n      previousOrders: {},\n      veryLastVisitDate: '',\n      selectedOrder: [],\n      // previousVisits: [],\n      authHeader: { Authorization: 'Token' },\n      masks: {\n        input: mask,\n        data: mask,\n        L: mask,\n      },\n    };\n  },\n  created() {\n    this.currentVisit = JSON.parse(JSON.stringify(this.$store.getters[VISIT_GET_CURRENT]));\n    this.checklist = JSON.parse(JSON.stringify(this.$store.getters[CHECKLIST_GET_CURRENT]));\n    // this.$store.dispatch(VISIT_DOWNLOAD_HISTORY_BY_INN_FROM_SERVER, this.currentVisit.clientINN);\n  },\n  watch: {\n    previousVisits() {\n      this.preparePreviousOrders();\n    },\n  },\n  mounted() {\n    // this.previousVisits[0].orders.forEach((order) => {\n    //   this.previousOrder[order.productItem] = order;\n    // });\n    // eslint-disable-next-line max-len\n    // this.previousVisits = this.$store.getters[VISIT_GET_HISTORY_BY_INN](this.currentVisit.clientINN);\n    const token = localStorage.getItem('user-token');\n    this.authHeader.Authorization = `Token ${token}`;\n    if (this.previousVisits !== undefined) {\n      this.preparePreviousOrders();\n    }\n  },\n  beforeDestroy() {\n    this.saveCurrentVisitToVuex();\n    this.saveCurrentChecklistToVuex();\n  },\n  methods:\n    {\n      saveCurrentVisitToVuex() {\n        this.$store.dispatch(VISIT_SAVE_CURRENT_TO_VUEX, this.currentVisit);\n      },\n      saveCurrentChecklistToVuex() {\n        this.$store.dispatch(CHECKLIST_SAVE_CURRENT, this.checklist);\n      },\n      resetVisit() {\n        this.checklist = [];\n        this.$store.dispatch(CHECKLIST_RESET_CURRENT);\n        this.currentVisit = {};\n        this.$store.dispatch(VISIT_SAVE_CURRENT_TO_VUEX, this.currentVisit);\n      },\n      finishVisit() {\n        this.currentVisit.date = new Date().toISOString().slice(0, 10);\n        this.formatDeliveryDate();\n        this.saveCurrentVisitToVuex();\n        this.$store.dispatch(VISIT_CLOSE_CURRENT);\n        this.$store.dispatch(CHECKLIST_SAVE_CURRENT, this.checklist);\n        this.$store.dispatch(CHECKLIST_UPLOAD_CURRENT_TO_SERVER);\n        this.$store.dispatch(CHECKLIST_RESET_CURRENT);\n        this.checklist = [];\n        this.$router.push('/route');\n      },\n      clientByINN(inn) {\n        return this.$store.getters[GETCLIENTBYINN](inn);\n      },\n      productByItem(productItem) {\n        return this.$store.getters[GOOD_BY_ITEM](productItem);\n      },\n      stringLineFromOrder(order) {\n        return `Заказ: ${order.order} Доставлено: ${order.delivered} Остаток: ${order.balance} Продажи: ${order.sales}`;\n      },\n      updateRecomSales(orderIndex) {\n        const { productItem } = this.currentVisit.orders[orderIndex];\n        const prevBalance = this.previousOrders[productItem][this.veryLastVisitDate].balance;\n        const prevDelivery = this.previousOrders[productItem][this.veryLastVisitDate].delivered;\n        // eslint-disable-next-line max-len\n        this.currentVisit.orders[orderIndex].sales = prevBalance + prevDelivery - this.currentVisit.orders[orderIndex].balance;\n        this.currentVisit.orders[orderIndex].recommend = this.currentVisit.orders[orderIndex].sales;\n      },\n      preparePreviousOrders() {\n        this.previousOrders = {};\n        this.previousVisits.forEach((visit) => {\n          visit.orders.forEach((order) => {\n            this.previousOrders[order.productItem] = this.previousOrders[order.productItem] || {};\n            /* this.previousOrders[order.productItem].push(order); */\n            this.previousOrders[order.productItem][visit.date] = order;\n            this.veryLastVisitDate = visit.date;\n          });\n        });\n      },\n      formatDeliveryDate() {\n        if ((this.currentVisit.deliveryDate || null) !== null) {\n          this.currentVisit.deliveryDate = new Date(this.currentVisit.deliveryDate).toISOString().substring(0, 10);\n        }\n      },\n    },\n};\n</script>\n\n<style scoped>\n  .fixed-row-bottom { position: fixed; bottom: 0; z-index: 999;}\n  .button.vs-tabs--btn {font-size: 20px}\n</style>\n",
			"file": "src/components/VisitEditor.vue",
			"file_size": 12975,
			"file_write_time": 132385876374864984,
			"settings":
			{
				"buffer_size": 12512,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/App.vue",
			"settings":
			{
				"buffer_size": 1524,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/store/modules/visits.js",
			"settings":
			{
				"buffer_size": 4900,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/store/modules/checklists.js",
			"settings":
			{
				"buffer_size": 2444,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/utils/http.js",
			"settings":
			{
				"buffer_size": 844,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/store/modules/goods.js",
			"settings":
			{
				"buffer_size": 1040,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/views/Visit.vue",
			"settings":
			{
				"buffer_size": 1656,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/components/LoginForm.vue",
			"settings":
			{
				"buffer_size": 1218,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"Package Control: ",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 157.0,
		"history":
		[
			"package",
			"Vue Syntax Highlight"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/components",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/router",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/store",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/store/modules",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/utils",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/views"
	],
	"file_history":
	[
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/views/Home.vue",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/views/Route.vue",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/components/VisitCreatePanel.vue",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/components/VisitEditor.vue",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/store/actions/visits.js",
		"/C/Users/Andrey Itiligator/WebstormProjects/mprfrontend/src/views/Visit.vue",
		"/C/Users/Andrei/WebstormProjects/mprfrontend/src/components/ShowOrderTable.vue",
		"/C/Users/Andrei/WebstormProjects/mprfrontend/src/components/OrderlistTable.vue",
		"/C/Users/Andrei/PycharmProjects/r2/mpr/visit/templates/main.html",
		"/C/Users/Andrei/Desktop/swagger"
	],
	"find":
	{
		"height": 27.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"collap",
			"consol",
			"firstDayOfWeek",
			"\t",
			"VisitEditor",
			"import"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"    "
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 4,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "src/components/Sidebar.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2709,
						"regions":
						{
						},
						"selection":
						[
							[
								10,
								10
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "src/views/Home.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1075,
						"regions":
						{
						},
						"selection":
						[
							[
								837,
								837
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/views/Route.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 8813,
						"regions":
						{
						},
						"selection":
						[
							[
								1925,
								1925
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 378.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1014,
						"regions":
						{
						},
						"selection":
						[
							[
								461,
								461
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "src/components/VisitEditor.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 12512,
						"regions":
						{
						},
						"selection":
						[
							[
								5863,
								5863
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2417.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/App.vue",
					"semi_transient": true,
					"settings":
					{
						"buffer_size": 1524,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"syntax": "Packages/User/vue-syntax-highlight-master/vue.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "src/store/modules/visits.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4900,
						"regions":
						{
						},
						"selection":
						[
							[
								1546,
								1508
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "src/store/modules/checklists.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2444,
						"regions":
						{
						},
						"selection":
						[
							[
								2071,
								2071
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 540.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "src/utils/http.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 844,
						"regions":
						{
						},
						"selection":
						[
							[
								456,
								456
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "src/store/modules/goods.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1040,
						"regions":
						{
						},
						"selection":
						[
							[
								614,
								614
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "src/views/Visit.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1656,
						"regions":
						{
						},
						"selection":
						[
							[
								1019,
								1019
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 162.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "src/components/LoginForm.vue",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1218,
						"regions":
						{
						},
						"selection":
						[
							[
								1182,
								1182
							]
						],
						"settings":
						{
							"syntax": "Packages/Vue Syntax Highlight/Vue Component.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 27.0
	},
	"input":
	{
		"height": 39.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "sublime-project.sublime-project",
	"replace":
	{
		"height": 50.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 268.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
